// Code generated by MockGen. DO NOT EDIT.
// Source: ./src/application/definitions/create-user.go

// Package mock_definitions is a generated GoMock package.
package mock_definitions

import (
	reflect "reflect"

	definitions "github.com/AndreyArthur/oganessone/src/application/definitions"
	shared "github.com/AndreyArthur/oganessone/src/core/shared"
	gomock "github.com/golang/mock/gomock"
)

// MockCreateAccount is a mock of CreateAccount interface.
type MockCreateAccount struct {
	ctrl     *gomock.Controller
	recorder *MockCreateAccountMockRecorder
}

// MockCreateAccountMockRecorder is the mock recorder for MockCreateAccount.
type MockCreateAccountMockRecorder struct {
	mock *MockCreateAccount
}

// NewMockCreateAccount creates a new mock instance.
func NewMockCreateAccount(ctrl *gomock.Controller) *MockCreateAccount {
	mock := &MockCreateAccount{ctrl: ctrl}
	mock.recorder = &MockCreateAccountMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateAccount) EXPECT() *MockCreateAccountMockRecorder {
	return m.recorder
}

// Execute mocks base method.
func (m *MockCreateAccount) Execute(data *definitions.CreateAccountDTO) (*definitions.CreateAccountResult, *shared.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", data)
	ret0, _ := ret[0].(*definitions.CreateAccountResult)
	ret1, _ := ret[1].(*shared.Error)
	return ret0, ret1
}

// Execute indicates an expected call of Execute.
func (mr *MockCreateAccountMockRecorder) Execute(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockCreateAccount)(nil).Execute), data)
}
