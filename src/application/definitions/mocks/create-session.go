// Code generated by MockGen. DO NOT EDIT.
// Source: ./src/application/definitions/create-session.go

// Package mock_definitions is a generated GoMock package.
package mock_definitions

import (
        reflect "reflect"

        definitions "github.com/AndreyArthur/oganessone/src/application/definitions"
        shared "github.com/AndreyArthur/oganessone/src/core/shared"
        gomock "github.com/golang/mock/gomock"
)

// MockCreateSession is a mock of CreateSession interface.
type MockCreateSession struct {
        ctrl     *gomock.Controller
        recorder *MockCreateSessionMockRecorder
}

// MockCreateSessionMockRecorder is the mock recorder for MockCreateSession.
type MockCreateSessionMockRecorder struct {
        mock *MockCreateSession
}

// NewMockCreateSession creates a new mock instance.
func NewMockCreateSession(ctrl *gomock.Controller) *MockCreateSession {
        mock := &MockCreateSession{ctrl: ctrl}
        mock.recorder = &MockCreateSessionMockRecorder{mock}
        return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateSession) EXPECT() *MockCreateSessionMockRecorder {
        return m.recorder
}

// Execute mocks base method.
func (m *MockCreateSession) Execute(data *definitions.CreateSessionDTO) (*definitions.CreateSessionResult, *shared.Error) {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "Execute", data)
        ret0, _ := ret[0].(*definitions.CreateSessionResult)
        ret1, _ := ret[1].(*shared.Error)
        return ret0, ret1
}

// Execute indicates an expected call of Execute.
func (mr *MockCreateSessionMockRecorder) Execute(data interface{}) *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockCreateSession)(nil).Execute), data)
}