// Code generated by MockGen. DO NOT EDIT.
// Source: ./src/application/providers/session.go

// Package mock_providers is a generated GoMock package.
package mock_providers

import (
        reflect "reflect"

        shared "github.com/AndreyArthur/oganessone/src/core/shared"
        gomock "github.com/golang/mock/gomock"
)

// MockSessionProvider is a mock of SessionProvider interface.
type MockSessionProvider struct {
        ctrl     *gomock.Controller
        recorder *MockSessionProviderMockRecorder
}

// MockSessionProviderMockRecorder is the mock recorder for MockSessionProvider.
type MockSessionProviderMockRecorder struct {
        mock *MockSessionProvider
}

// NewMockSessionProvider creates a new mock instance.
func NewMockSessionProvider(ctrl *gomock.Controller) *MockSessionProvider {
        mock := &MockSessionProvider{ctrl: ctrl}
        mock.recorder = &MockSessionProviderMockRecorder{mock}
        return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSessionProvider) EXPECT() *MockSessionProviderMockRecorder {
        return m.recorder
}

// GenerateKey mocks base method.
func (m *MockSessionProvider) GenerateKey() (string, *shared.Error) {
        m.ctrl.T.Helper()
        ret := m.ctrl.Call(m, "GenerateKey")
        ret0, _ := ret[0].(string)
        ret1, _ := ret[1].(*shared.Error)
        return ret0, ret1
}

// GenerateKey indicates an expected call of GenerateKey.
func (mr *MockSessionProviderMockRecorder) GenerateKey() *gomock.Call {
        mr.mock.ctrl.T.Helper()
        return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateKey", reflect.TypeOf((*MockSessionProvider)(nil).GenerateKey))
}